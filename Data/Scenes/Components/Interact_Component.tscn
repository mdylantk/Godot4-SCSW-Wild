[gd_scene load_steps=2 format=3 uid="uid://bnt60muvh63sj"]

[sub_resource type="GDScript" id="GDScript_fjqi6"]
script/source = "class_name Interact_Component extends StaticBody2D

signal started(handler, interactor, data)
signal finished(canceled:bool, data:Dictionary)

#NOTE:THIS might work, just move the state here and leave data as logic and 
#static state.

@export var interactive_data : Interactive_Data:
	set(value):
		if interactive_data != null and interactive_data != value:
			interactive_data.finished.connect(on_finished)
		interactive_data = value

func _ready():
	if interactive_data != null and !interactive_data.finished.is_connected(on_finished):
		interactive_data.finished.connect(on_finished)
	pass

func on_finished(canceled:bool, data:Dictionary):
	print(get_parent())
	finished.emit(canceled, data)
	
#NOTE: target should be the owner or no interactee should be needed
func on_interact(handler, interactor, interactee = self, data = {}):
	if interactive_data != null:
		interactive_data.interact(handler, interactor, interactee, data)
		started.emit(handler, interactor, data)
"

[node name="Interact_Component" type="StaticBody2D"]
collision_layer = 2
collision_mask = 0
script = SubResource("GDScript_fjqi6")
