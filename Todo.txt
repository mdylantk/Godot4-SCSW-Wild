The system design so far will compose of:
	-major handlers that will handler much of the game main logic
	-static functions scripts that help connect paths to the handler. 
		-some handler may have these static functions or they will not be 
		static if base handler is easily acessable and assumed caller would 
		know about the base handler logic.
	-independent systems. group of resources that can wark by themselves, but
		may need some variables set and signals connected to actually run with 
		the game.
		
	-State_Resource systems: a resource of a nested dictionary for saving data
		related to a major system like the game or player. The first layer is
		group id to help reduce the length of the dictionary and possible looping time.
		The rest are save var enteries. It abstract, but children could had a form of
		fix features to the data. 
		This still wip. 
		
system base layout so far:
	(optional Main which swicthes games modes and host the init main menu):
		-this would come before the rest.
	Game (Game_Handler): The main game logic and represent the game.
		Player_Handler: Represent the client side or Player Controller.
			HUD: the client hud and gui elements
		World_Handler: Represent the world or level. Loading, unloading, and handling
			Level, Enities, and Pawns are possible children of this
		(any other system will be under game except network which will need to 
		be a sibling or higher up if the game logic ever need to be modual)
		
NOTE: Game logic is not meant to be switch out in this game. Why the extra layer 
is consider optional.

TODO:
	generaly clean up and improve the logic. 
	Beside that:
		-make fishing more enjoyable
		-improve world generation. world gen may or may not need a rewrite again
		-improve the dialog system. Multible choices, random chices, easy editing,
		localiztion, scripted logic, and data request are the main feature it should support.
		Some, like scripting, is not as nessary and can be hard coded. data request may 
		need way to look up data in the system. 
		-maybe add a for of database so resources can be found easier in script as well
		as added easier resources. 
		-finish up the inventory and probably improve it more.
			NOTE inventory should stay a dictonary. Most metadata or states should
			be a dictonary of mostly simple data and path to static objects. 
		Improve the old man speech. His is mostly a quick placeholder
		
Note:
	The game is a prototype for bigger project. The main goal now is to make the
	code base easier to work with and expand on the exploration and fishing themes
	where the main charater is a specail cat. Also with the limitation of only using Kenney
	based art resources. 
	
	After a decent improved version of this game is made, it can be expanded upon with the
	main orignal them. making fishing a side activity and pushing more around exploration,
	civialtion expanding(resure humans and then set up shop at center), and lore/story (the world
	is a abstracted space of timespace compression. greatly extended after a madman almost sucedded
	in starting a chain reaction of the compression. now the link to it is more common allowing the
	cat to travel to static world of diffrent time and universes if it stumble upon one).
